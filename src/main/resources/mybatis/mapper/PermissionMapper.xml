<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.braisedpanda.shirotest.mapper.PermissionMapper">


    <!--添加角色-->
    <insert id="addRole" parameterType="com.braisedpanda.shirotest.bean.Role"

    >
        insert into role
        (roleId,
        role,
        roleDescribe

        )
        values (
        #{roleId},
        #{role},
        #{roleDescribe}
   )

    </insert>


    <!--查询所有的权限信息-->
    <select id="getAllPermission" resultType="com.braisedpanda.shirotest.bean.Permission">
        select * from permission
    </select>

    <!--根据权限id查出对应的权限-->
    <select id="getPermissionById" resultType="com.braisedpanda.shirotest.bean.Permission">
        select * from permission where nationName = #{nationName}
    </select>

    <insert id="addRole_Permission" parameterType="com.braisedpanda.shirotest.bean.RolePermission">
      insert into role_permission
      (
      rPId,
      nationName,
      permission,
      permissionDescribe,
      roleId,
      role,
      roleDescribe
      )
      values
      (
      #{rPId},
      #{nationName},
      #{permission},
      #{permissionDescribe},
      #{roleId},
      #{role},
      #{roleDescribe}

      )



    </insert>


    <!--查找所有的角色-->
    <select id="getAllRole" resultType="com.braisedpanda.shirotest.bean.Role">
        select * from role
    </select>

    <!--根据uid查找所有的角色-->
    <select id="getRoleById" resultType="com.braisedpanda.shirotest.bean.UserRole">
        select * from user_role where uid=#{uid}
    </select>

    <!--根据roleId在表role中查询相应的role-->
    <select id="getRoleByroleId" resultType="com.braisedpanda.shirotest.bean.Role">
        select * from role where roleId = #{roleId}
    </select>

    <!--新增user_role信息-->
    <insert id="addUser_Role" parameterType="com.braisedpanda.shirotest.bean.UserRole">
        insert into user_role
        (
        u_r_id,
        roleId,
        role,
        uid,
        username,
        roleDescribe
        )
        values
        (
        #{u_r_id},
        #{roleId},
        #{role},
        #{uid},
        #{username},
        #{roleDescribe}

        )



    </insert>

    <!--在表user_role中删除所有uid的角色-->
    <delete id="deleteRoleByUid">
        delete  from user_role where uid=#{uid}
    </delete>

    <!--查找所有的role_permission表中内容-->
    <select id="getAllRole_Permission" resultType="com.braisedpanda.shirotest.bean.RolePermission"
            >
        select * from role_permission
    </select>

    <!--根据rPId删除角色所拥有的权限-->
    <delete id="deleteRolePermissionById">
        delete from role_permission where rPId = #{rPId}
    </delete>


    <!-- 根据rPId查找role_permission对象-->
    <select id="getRole_PermissionById" resultType="com.braisedpanda.shirotest.bean.RolePermission">
        select * from role_permission where roleId = #{roleId}

    </select>

    <!--根据roleId删除role_permission表中所有的权限-->
    <delete id="deleteRolePermissionByroleId">
        delete from role_permission where roleId=#{roleId}
    </delete>

    <!-- 在role表中更新role的相关权限、名称等信息-->
    <update id="updateRole" parameterType="com.braisedpanda.shirotest.bean.Role">
        update role set role=#{role},roleDescribe=#{roleDescribe} where roleId=#{roleId}
    </update>

    <!--根据roleId删除表role中的role-->
    <delete id="deleteRoleByroleId">
        delete from role where roleId=#{roleId}
    </delete>




</mapper>